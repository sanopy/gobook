Go言語研修振り返り
18 Feb 2022

Sanosuke Kato

* 研修を終えて

💪 なんとか走りきった

- なんとか全ての練習問題に取り組むことができた
- 書籍の文章に一通り目を通すことができた

🙏 機会に感謝

- 「研修」や「課題」のような一定の強制力がはたらく環境でなければ最後まで完走できなかったと思う
- 講師の柴田さん、このような機会を与えて頂いた皆さんに感謝🙏🙏🙏

* 印象深い課題 📁 FTPサーバ実装

事前に噂には聞いていたが、やはり最も実装量が多く大変だった

😫 特に大変だったこと

PORTコマンド実装時、なぜか2重に接続を確立しており、データの通信が一生やってこないように見えるバグに数日悩んだ（脳死コピペをやめよう）

  // 以降、ここで接続を確立したPortに対してクライアントからデータが送られる
  c.Data, err = net.Dial("tcp", addr)
  // 新たな接続を確立、虚無通信を行うPortに接続先保存用の変数が更新された
  c.Data, err = net.Dial("tcp", addr)
  if err != nil {
    // ...

* 印象深い課題 📁 FTPサーバ実装

💡 実装上の工夫

ログにパスワードが漏洩しないようにした（セキュリティ観点）

.code -numbers ../ch08/ex02/util.go /if c.cmd == "PASS"/,/}$/
.link https://github.com/sanopy/gobook/blob/14dd432fc527c2c2268753bb2a0cef3ae58bd9b9/ch08/ex02/util.go#L28-L31 ch08/ex02/util.go

🎓 その他の学び・気付き

- コードを書くために、RFCを読んで仕様を理解するという経験が新鮮だった
- 小さな仕様であれば、「実装しながら理解する」と楽しくキャッチアップすることができそう

* 印象深い課題 🧮 式評価機（7章）

🤔 LL法、コンパイラの実装知識が必要？

- 本文中では言及されていなかったが、Parser部分はLL法で書かれていたようだった
- 大学のコンパイラの授業の内容などが思い出されて面白かった

💡 練習問題への取り組み

三項演算子のサポートを追加して、より言語っぽい何かを作った

.code -numbers ../ch07/ex14/eval_test.go /2}, "1"},$/,/2}, "4"},$/
.link https://github.com/sanopy/gobook/blob/14dd432fc527c2c2268753bb2a0cef3ae58bd9b9/ch07/ex14/eval_test.go#L34-L37 ch07/ex14/eval_test.go

* 印象深い学び

🎓 排他制御に関して

  Q. なぜ並列にアクセスされる変数に対してRead Lockが必要か？
  A. キャッシュの同期をとるため

🎓 Go言語を通じてコンピュータの理解が深まる感じが非常に面白かった

- 研修参加前は、特に、並行処理のプログラミング経験は少なかった
- Go言語を通じて、並行処理の理解を深めることができたように感じる

* その他の振り返り

💡 気付き

- 練習問題への取り組みを通じて、平日の夜や週末などに意外とコードを書く時間があることに気付いた
- 今まではお酒などを飲みながらダラダラ過ごしていたかもしれない時間など🍺
- 実際、ここ最近はお酒を飲む頻度も減ったかもしれない ←お酒を飲んでダラダラするくらいなら練習問題やっておこうみたいな感じで（健康的！）
- こういった時間を今後も有効活用していきたい💪
- ...でも今日は色々終わった達成感からお酒を飲むかも🥃

* 最後に

業務上、コードレビューしてもらう機会は少ないので、練習問題を見てもらう経験は非常に有意義でした。
特に、テストコードの書き方のアドバイスなどは勉強になりました。

約半年の間ありがとうございました！

一緒に受講していた方々とも、もくもく会などで同じ問題に取り組むという経験ができて楽しかったです（こういう機会が他にもあるといいな）。
約半年間お疲れ様でした！
